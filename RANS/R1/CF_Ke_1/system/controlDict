/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          0.1;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{
    forceCoeffs
    {
        type            forceCoeffs;
        libs            ("libforces.so");
        patches         ("Cylinder"); // Adjust patch name as necessary
        rho             rhoInf;
        rhoInf          1;
        CofR            (0 0 0); // Center of rotation
        liftDir         (0 1 0); // Direction of lift force
        dragDir         (1 0 0); // Direction of drag force
        pitchAxis       (0 0 1);
        magUInf         1;
        lRef            1; // Reference length (cylinder diameter)
        Aref            1; // Reference area (cylinder length * diameter)
        writeControl    timeStep;
        writeInterval   1;
    }

    sets
    {
        type            sets;
        libs            ("libsampling.so");
        interpolationScheme cellPoint;
        setFormat       raw;
        writeControl    timeStep;
        writeInterval   100;

        sets
        (
            sampleLine_U
            {
                type    uniform;
                axis    y; // Assuming sampling along y-axis, adjust as necessary
                start   (0 0 0);
                end     (0 1 0);
                nPoints 100;
            }
        );

        fields
        (
            U
        );
    }

    #includeFunc streamlines
}

// ************************************************************************* //
